*,
*:before,
*:after {
  box-sizing: border-box;
}

@font-face {
  font-weight: 900;
  font-family: 'DrukWideCyr';
  font-style : normal;
  src        : url('../fonts/druktextwide-super.woff2') format('woff2');
}
.botForm {
    width: 100%;
    max-width: 500px;
    font-family: Roboto, sans-serif;
}

.formSectionHeader {
    margin-bottom: 26px
}

.formSectionHeader h2 {
        margin-bottom: 20px;
        padding-top: 30px;
        color: #333333;
        font-weight: 900;
        font-size: 20px;
        font-family: 'DrukWideCyr', sans-serif;
        font-style: normal;
        line-height: 24px;
        letter-spacing: 0.05em;
        text-transform: uppercase;
    }

.formSectionHeader p {
        margin: 0 0 16px 0;
        color: #333333;
        font-weight: normal;
        font-size: 16px;
        font-family: Roboto, sans-serif;
        font-style: normal;
        line-height: 19px;
    }

.formSectionHeader .formSectionHeaderText p {
            margin: 0
        }

.formSectionHeader .formSectionHeaderText p span {
                color: #FE7E98;
            }

.formSectionHeader .formSectionHeaderText {display: flex;flex-direction: row;align-items: center
    }

.formSectionHeader .formSectionHeaderImage {
        width: 40px;
        height: 40px;
        margin-right: 12px;
        -o-object-fit: cover;
           object-fit: cover;
    }

.formItem {
    margin-bottom: 20px;
    transition: all .3s;
}

.formInput {
    width: 100%;
    height: 60px;
    padding: 20px;
    color: #333333;
    font-size: 16px;
    font-family: Roboto, sans-serif;
    line-height: 19px;
    background-color: #F0F0F0;
    border: 1px solid #F0F0F0;
    border-radius: 10px
}

.formInput:focus {
        outline: 0;
    }

.formInput .PhoneInputInput {
        border: none;
        font-size: 16px;
        font-family: Roboto, sans-serif;
        line-height: 19px;
        background-color: #F0F0F0
    }

.formInput .PhoneInputInput.focus-visible, .formInput .PhoneInputInput:focus {
            border: none;
            background-color: #F0F0F0;
            outline: none;
        }

.formInputError {
    border: 1px solid #FE7E98;
}

.formAlert {
    margin-bottom: 20px;
    padding: 17px 20px;
    color: #FFF;
    font-size: 16px;
    font-family: Roboto, sans-serif;
    line-height: 19px;
    background: #FE7E98;
    border-radius: 10px;
}

.buttonSubmit {
    box-sizing: border-box;
    width: 100%;
    height: 80px;
    color: #020144;
    font-weight: 600;
    font-size: 14px;
    font-family: 'DrukWideCyr',Arial,sans-serif;
    font-style: normal;
    line-height: 17px;
    letter-spacing: 0.1em;
    text-align: center;
    text-transform: uppercase;
    background-color: #00FF36;
    border: 2px solid #020144;
    border-radius: 50px;
    outline: none;
    cursor: pointer;
    transition:background-color 0.2s ease-in-out, color 0.2s ease-in-out, border-color 0.2s ease-in-out;
    -webkit-appearance: none
}

.buttonSubmit:hover {
        background-color: #f5f300;
    }

.buttonSubmit:disabled {
        opacity: 0.6;
    }

.formCheckbox {
    position: relative;
    display: block;
    margin-bottom: 20px;
    padding-left: 40px;
    color: #333333;
    font-size: 16px;
    line-height: 20px;
    cursor: pointer;
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none
}

.formCheckbox a {
        color: #333333;
        text-decoration: none;
        border-bottom: 1px solid #BDBDBD;
    }

/* Hide the browser's default checkbox */

.formCheckbox input {
    position: absolute;
    width: 0;
    height: 0;
    cursor: pointer;
    opacity: 0;
}

/* Create a custom checkbox */

.checkmark {
    position: absolute;
    top: -6px;
    left: 0;
    width: 30px;
    height: 30px;
    background-color: #eee;
    border: 1px solid #eee;
    border-radius: 10px;
}

/* On mouse-over, add a grey background color */

.formCheckbox:hover input ~ .checkmark {
    background-color: #F0F0F0;
}

/* When the checkbox is checked, add a blue background */

.formCheckbox input:checked ~ .checkmark {
    background-color: #F0F0F0;
}

/* Create the checkmark/indicator (hidden when not checked) */

.checkmark:after {
    position: absolute;
    display: none;
    content: "";
}

/* Show the checkmark when checked */

.formCheckbox input:checked ~ .checkmark:after {
    display: block;
}

/* Style the checkmark/indicator */

.formCheckbox .checkmark:after {
    top: 8px;
    left: 9px;
    width: 14px;
    height: 14px;
    background-image: url("data:image/svg+xml,%3Csvg width='14' height='14' viewBox='0 0 14 14' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M11.9574 0.820312L5.54258 9.27773L1.75 5.48789L0 7.23789L5.83242 13.0703L14 2.57031L11.9574 0.820312Z' fill='%23FF6906'/%3E%3C/svg%3E%0A");
}

.formCheckboxError .checkmark {
        border: 1px solid #FE7E98;
    }

.small_alert {
    margin-bottom: 20px;
    padding: 17px 20px;
    color: #FFF;
    font-size: 16px;
    font-family: Roboto, sans-serif;
    line-height: 19px;
    background: #FF6906;
    border-radius: 10px;
}

.select-search {
    position: relative;
    box-sizing: border-box;
    width: 100%;
    font-family: Roboto, sans-serif;
}

.select-search *,
.select-search *::after,
.select-search *::before {
    box-sizing: inherit;
}

/**
 * Value wrapper
 */

.select-search__value {
    position: relative;
    z-index: 1;
}

.select-search__value::after {
    position: absolute;
    top: calc(50% - 9px);
    right: 19px;
    display: inline-block;
    width: 11px;
    height: 11px;
    content: '';
}

/**
 * Input
 */

.select-search__input {
    display: block;
    width: 100%;
    height: 60px;
    padding: 20px;
    font-size: 16px;
    line-height: 20px;
    text-align: left;
    text-overflow: ellipsis;
    background: #F0F0F0;
    border: 1px solid #F0F0F0;
    border-radius: 10px;
    outline: none;
    -webkit-appearance: none;
}

.select-search__input::-webkit-search-decoration,
.select-search__input::-webkit-search-cancel-button,
.select-search__input::-webkit-search-results-button,
.select-search__input::-webkit-search-results-decoration {
    -webkit-appearance:none;
}

.select-search__input:not([readonly]):focus {
    cursor: auto;
    cursor: initial;
}

/**
 * Options wrapper
 */

.select-search__select {
    background: #FFF;
    box-shadow: 0px 20px 30px rgba(0, 0, 0, 0.1);
}

/**
 * Options
 */

.select-search__options {
    margin: 10px 0;
    padding: 0;
    list-style: none;
}

/**
 * Option row
 */

/* .select-search__row:not(:first-child) {
    border-top: 1px solid #eee;
} */

/**
 * Option
 */

.select-search__option {
    display: block;
    width: 100%;
    height: 30px;
    padding: 0 16px;
    font-size: 16px;
    font-family: 'Roboto', sans-serif;
    text-align: left;
    background: #fff;
    border: none;
    outline: none;
    cursor: pointer;
}

.select-search--multiple .select-search__option {
    height: 48px;
}

.select-search__option.is-selected {
    background: #F0F0F0;
}

.select-search__option.is-highlighted,
.select-search__option:not(.is-selected):hover {
    background: rgba(47, 204, 139, 0.1);
}

.select-search__option.is-highlighted.is-selected,
.select-search__option.is-selected:hover {
    background: #F0F0F0;
}

/**
 * Group
 */

.select-search__group-header {
    padding: 8px 16px;
    font-size: 10px;
    text-transform: uppercase;
    background: #eee;
}

/**
 * States
 */

.select-search.is-disabled {
    opacity: 0.5;
}

.select-search.is-loading .select-search__value::after {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='50' height='50' viewBox='0 0 50 50'%3E%3Cpath fill='%232F2D37' d='M25,5A20.14,20.14,0,0,1,45,22.88a2.51,2.51,0,0,0,2.49,2.26h0A2.52,2.52,0,0,0,50,22.33a25.14,25.14,0,0,0-50,0,2.52,2.52,0,0,0,2.5,2.81h0A2.51,2.51,0,0,0,5,22.88,20.14,20.14,0,0,1,25,5Z'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 25 25' to='360 25 25' dur='0.6s' repeatCount='indefinite'/%3E%3C/path%3E%3C/svg%3E");
    background-size: 11px;
}

.select-search:not(.is-disabled) .select-search__input {
    cursor: pointer;
}

/**
 * Modifiers
 */

.select-search--multiple {
    overflow: hidden;
    border-radius: 3px;
    -webkit-overflow-scrolling: touch;
}

.select-search:not(.is-loading):not(.select-search--multiple) .select-search__value::after {
    border-right: 1px solid #000;
    border-bottom: 1px solid #000;
    transform: rotate(45deg);
    pointer-events: none;
}

.select-search--multiple .select-search__input {
    cursor: auto;
    cursor: initial;
}

.select-search--multiple .select-search__input {
    border-radius: 3px 3px 0 0;
}

.select-search--multiple:not(.select-search--search) .select-search__input {
    cursor: default;
}

/* .select-search:not(.select-search--multiple) .select-search__input:hover {
    border-color: #2FCC8B;
} */

.select-search:not(.select-search--multiple) .select-search__select {
    position: absolute;
    top: 60px;
    right: 0;
    left: 0;
    z-index: 2;
    max-height: 260px;
    overflow: auto;
    border-radius:10px;
    -webkit-overflow-scrolling: touch;
}

.select-search--multiple .select-search__select {
    position: relative;
    max-height: 260px;
    overflow: auto;
    border-top: 1px solid #eee;
    border-radius: 0 0 3px 3px;
    -webkit-overflow-scrolling: touch;
}

.formSuccess {
    max-width: 720px;
    padding: 80px 0px;
}

.formSuccessTitle {
    margin-bottom: 20px;
    color: #FF6906;
    font-weight: 900;
    font-size: 22px;
    font-family: 'DrukWideCyr', sans-serif;
    font-style: normal;
    line-height: 22px;
    letter-spacing: 0.05em;
    text-align: center;
    text-transform: uppercase
}

@media (min-width: 370px) {

.formSuccessTitle {
        font-size: 26px;
        line-height: 26px
}
    }

@media (min-width: 500px) {

.formSuccessTitle {
        font-size: 44px;
        line-height: 44px
}
    }

.formSuccessText {
    margin-bottom: 30px;
    color: #020144;
    font-weight: normal;
    font-size: 21px;
    font-family: 'Roboto', sans-serif;
    font-style: normal;
    line-height: 25px;
    text-align: center;
}

.formSuccessBot {
    display: flex;
    align-content: center;
    justify-content: center
}

.formSuccessBot a {
        margin-right: 20px;
        margin-bottom: 20px;
        margin-left: 20px;
    }

.formSuccessBot {
    flex-wrap: wrap;display: flex;flex-direction: row;align-items: center;justify-content: center;
}

.formSuccessBotTG {
    width: 200px;
    height: 70px;
    color: #FFFFFF;
    font-weight: 900;
    font-size: 12px;
    font-family: 'DrukWideCyr', sans-serif;
    font-style: normal;
    line-height: 15px;
    letter-spacing: 0.1em;
    text-align: center;
    text-transform: uppercase;
    text-decoration: none;
    background: #27A7E7;
    border: 2px solid #020144;
    border-radius: 50px;
    transition: all .3s
}

.formSuccessBotTG:hover {
        background-color: #FF6906;
    }

.formSuccessBotTG {display: flex;flex-direction: column;justify-content: center;align-items: center
}

.formSuccessBotVK {
    width: 200px;
    height: 70px;
    color: #FFFFFF;
    font-weight: 900;
    font-size: 12px;
    font-family: 'DrukWideCyr', sans-serif;
    font-style: normal;
    line-height: 15px;
    letter-spacing: 0.1em;
    text-align: center;
    text-transform: uppercase;
    text-decoration: none;
    background: #4A76A8;
    border: 2px solid #020144;
    border-radius: 50px;
    transition: all .3s
}

.formSuccessBotVK:hover {
        background-color: #FF6906;
    }

.formSuccessBotVK {display: flex;flex-direction: column;justify-content: center;align-items: center
}

.formSuccessBotVB {
    width: 200px;
    height: 70px;
    color: #FFFFFF;
    font-weight: 900;
    font-size: 12px;
    font-family: 'DrukWideCyr', sans-serif;
    font-style: normal;
    line-height: 15px;
    letter-spacing: 0.1em;
    text-align: center;
    text-transform: uppercase;
    text-decoration: none;
    background: #7360F2;
    border: 2px solid #020144;
    border-radius: 50px;
    transition: all .3s
}

.formSuccessBotVB:hover {
        background-color: #FF6906;
    }

.formSuccessBotVB {display: flex;flex-direction: column;justify-content: center;align-items: center
}

.react-dadata .react-dadata__input {
        width: 100%;
        height: 60px;
        padding: 20px;
        color: #333333;
        font-size: 16px;
        font-family: Roboto, sans-serif;
        line-height: 19px;
        background-color: #F0F0F0;
        border: 1px solid #F0F0F0;
        border-radius: 10px
    }

.react-dadata .react-dadata__input:focus {
            border: 1px solid #F0F0F0;
            outline: 0;
        }

.react-dadata .react-dadata__suggestions {
        overflow: hidden;
        border-radius: 10px;
        -webkit-overflow-scrolling: touch;
    }

.react-dadata .react-dadata__suggestion {
        padding: 7px 20px;
        font-size: 16px;
        font-family: Roboto, sans-serif;
        line-height: 19px
    }

.react-dadata-error .react-dadata__input {
        border: 1px solid #FE7E98;
    }

.formSchoolAlert {
    position: relative;
    margin-bottom: 40px;
    padding: 17px 20px;
    padding-right: 110px;
    color: #FFF;
    font-size: 16px;
    font-family: Roboto, sans-serif;
    line-height: 19px;
    -webkit-hyphens: auto;
        -ms-hyphens: auto;
            hyphens: auto;
    background: #FE7E98;
    border-radius: 10px;
}

.formSchoolAlertSticker {
    position: absolute;
    right: -30px;
    bottom: -40px;
    width: 150px;
    height: 150px;
}

.formCodeAlert {
    position: relative;
    width: 100%;
    margin-bottom: 0px;
    padding: 17px 20px;
    color: #333;
    font-size: 16px;
    font-family: Roboto, sans-serif;
    line-height: 19px;
    -webkit-hyphens: auto;
        -ms-hyphens: auto;
            hyphens: auto;
    background-color: rgba(255, 105, 6, 0.2);
    border-radius: 10px
}

.formCodeAlert p {
        margin: 0;
        /* min-height: 38px; */
    }

.formCodeAlert {display: flex;flex-direction: row;align-items: center;justify-content: space-between
}

.formCodeAlertGreen {
    background-color: rgba(0, 130, 87, 0.15);
}

.formCodeAlertSticker {
    display: block;
    width: 60px;
    min-width: 60px;
    height: 60px;
    margin-top: -10px;
    background-size: 60px;
}

.dateAlert {
    position: relative;
    width: 100%;
    margin-bottom: 0px;
    padding: 17px 20px;
    color: #333;
    font-size: 16px;
    font-family: Roboto, sans-serif;
    line-height: 19px;
    -webkit-hyphens: auto;
        -ms-hyphens: auto;
            hyphens: auto;
    background-color: rgba(255, 105, 6, 0.2);
    border-radius: 10px
}

.dateAlert p {
        margin: 0;
        padding-right: 20px;
        /* min-height: 38px; */
    }

.dateAlert {display: flex;flex-direction: row;align-items: center;justify-content: space-between
}

.dateAlertSticker {
    display: block;
    width: 80px;
    min-width: 80px;
    height: 80px;
    background-repeat: no-repeat;
    background-size: 80px;
}

.botWrapper {
    margin: 0 auto;
    padding: 50px 50px;
    text-align: left;
    background-color: #FFF
}

.botWrapper input {
        -webkit-appearance: none;
    }

@media (max-width: 370px) {

.botWrapper {
        padding: 50px 10px 100px
}
    }

@media (max-width: 768px) {

.botWrapper {
        padding: 50px 20px 100px
}
    }

.botWindow {
    max-width: 720px;
    min-height: 500px;
    margin: 0 auto;display: flex;flex-direction: column;justify-content: flex-start;align-items: center;
}

.botHeader {
    margin-bottom: 20px;
    color: #FF6906;
    font-weight: 900;
    font-size: 20px;
    font-family: 'DrukWideCyr', sans-serif;
    font-style: normal;
    line-height: 44px;
    letter-spacing: 0.05em;
    text-align: center;
    text-transform: uppercase
}

@media (min-width: 370px) {

.botHeader {
        font-size: 26px
}
    }

@media (min-width: 500px) {

.botHeader {
        font-size: 36px
}
    }

.fade-enter {
    
    opacity: 0;
}

.fade-enter-active {
    
    opacity: 1;
    transition: all 500ms;
}

.fade-exit {
    
    opacity: 1;
}

.fade-exit-active {
    
    opacity: 0;
    transition: all 500ms;
}

.react-autosuggest__container {
    position: relative;
}

.react-autosuggest__input {
    width: 240px;
    height: 30px;
    padding: 10px 20px;
    font-weight: 300;
    font-size: 16px;
    font-family: Helvetica, sans-serif;
    border: 1px solid #aaa;
    border-radius: 4px;
}

.react-autosuggest__input--focused {
    outline: none;
}

.react-autosuggest__input--open {
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
}

.react-autosuggest__suggestions-container {
    display: none;
}

.react-autosuggest__suggestions-container--open {
    position: absolute;
    top: 51px;
    z-index: 2;
    display: block;
    width: 280px;
    font-weight: 300;
    font-size: 16px;
    font-family: Helvetica, sans-serif;
    background-color: #fff;
    border: 1px solid #aaa;
    border-bottom-right-radius: 4px;
    border-bottom-left-radius: 4px;
}

.react-autosuggest__suggestions-list {
    margin: 0;
    padding: 0;
    list-style-type: none;
}

.react-autosuggest__suggestion {
    padding: 10px 20px;
    cursor: pointer;
}

.react-autosuggest__suggestion--highlighted {
    background-color: #ddd;
}

.react-dadata__container {
    position: relative;
    font-family: sans-serif;
}

.react-dadata__input {
    display: block;
    box-sizing: border-box;
    height: 38px;
    border: 1px solid #ccc;
    border-radius: 4px;
    width: 100%;
    font-size: 16px;
    padding: 0 10px;
    outline: none;
}

.react-dadata__input.react-dadata__input-clearable {
    padding-right: 30px;
}

.react-dadata__input:focus {
    border-color: #85b7d9;
}

.react-dadata__suggestions {
    position: absolute;
    z-index: 10;
    background-color: #fff;
    box-shadow: 0 1px 6px 3px rgba(0, 0, 0, .1);
    top: 100%;
    left: 0;
    right: 0;
}

.react-dadata__suggestion-note {
    font-size: 14px;
    line-height: 18px;
    color: #828282;
    padding: 5px 10px;
    display: flex;
}

.react-dadata__suggestion-note span {
    display: block;
    line-height: 16px;
}

.react-dadata__suggestion-note span.suggestion-note_arrow {
    display: flex;
    align-items: center;
    margin: 0 3px;
}

.react-dadata__suggestion {
    font-size: 15px;
    padding: 7px 10px;
    cursor: pointer;
}

.react-dadata__suggestion-info {
    font-size: 14px;
    color: #777777;
}

.react-dadata__suggestion--current, .react-dadata__suggestion.react-dadata__suggestion--current:hover {
    background-color: rgba(65, 131, 196, 0.2);
}

.react-dadata__suggestion:hover {
    background-color: rgba(65, 131, 196, 0.1);
}

.react-dadata mark {
    background: none;
}

.react-dadata--highlighted {
    color: #4183c4;
}

.react-dadata__input-suffix {
    right: 12px;
    position: absolute;
    top: 50%;
    z-index: 2;
    color: rgba(0, 0, 0, 0.65);
    line-height: 0;
    transform: translateY(-50%);
}

.react-dadata__icon {
    position: relative;
    display: inline-block;
    vertical-align: top;
    transition: color .3s;
    width: 16px;
    height: 16px;
    opacity: 0.3;
    background-color: #cccccc;
    border-radius: 50%;
    cursor: pointer;
}

.react-dadata__icon:hover {
    opacity: 1;
}

.react-dadata__icon.react-dadata__icon-clear:before, .react-dadata__icon.react-dadata__icon-clear:after {
    position: absolute;
    top: 4px;
    left: 7px;
    content: ' ';
    height: 8px;
    width: 1px;
    background-color: #ffffff;
}

.react-dadata__icon.react-dadata__icon-clear:before {
    transform: rotate(45deg);
}

.react-dadata__icon.react-dadata__icon-clear:after {
    transform: rotate(-45deg);
}

.react-dadata__keyboard-arrows-up-and-down {
    height: 10%;
}

.react-dadata__keyboard-arrows-right {
    height: 10%;
}

.react-dadata__custom-action {
    padding: 0;
}

.react-dadata__custom-action > * {
    display: block;
    height: 100%;
    padding: 7px 10px;
    width: 100%;
}

.actions-delimiter {
    margin: 0;
    border-top: 1px solid #eeeeee;
    border-left: none;
    border-right: none;
}

/* CSS variables. */
:root {
	--PhoneInput-color--focus: #03b2cb;
	--PhoneInputInternationalIconPhone-opacity: 0.8;
	--PhoneInputInternationalIconGlobe-opacity: 0.65;
	--PhoneInputCountrySelect-marginRight: 0.35em;
	--PhoneInputCountrySelectArrow-width: 0.3em;
	--PhoneInputCountrySelectArrow-marginLeft: var(--PhoneInputCountrySelect-marginRight);
	--PhoneInputCountrySelectArrow-borderWidth: 1px;
	--PhoneInputCountrySelectArrow-opacity: 0.45;
	--PhoneInputCountrySelectArrow-color: inherit;
	--PhoneInputCountrySelectArrow-color--focus: var(--PhoneInput-color--focus);
	--PhoneInputCountrySelectArrow-transform: rotate(45deg);
	--PhoneInputCountryFlag-aspectRatio: 1.5;
	--PhoneInputCountryFlag-height: 1em;
	--PhoneInputCountryFlag-borderWidth: 1px;
	--PhoneInputCountryFlag-borderColor: rgba(0,0,0,0.5);
	--PhoneInputCountryFlag-borderColor--focus: var(--PhoneInput-color--focus);
	--PhoneInputCountryFlag-backgroundColor--loading: rgba(0,0,0,0.1);
}
.PhoneInput {
	/* This is done to stretch the contents of this component. */
	display: flex;
	align-items: center;
}
.PhoneInputInput {
	/* The phone number input stretches to fill all empty space */
	flex: 1;
	/* The phone number input should shrink
	   to make room for the extension input */
	min-width: 0;
}
.PhoneInputCountryIcon {
	width: calc(1em * 1.5);
	width: calc(var(--PhoneInputCountryFlag-height) * var(--PhoneInputCountryFlag-aspectRatio));
	height: 1em;
	height: var(--PhoneInputCountryFlag-height);
}
.PhoneInputCountryIcon--square {
	width: 1em;
	width: var(--PhoneInputCountryFlag-height);
}
.PhoneInputCountryIcon--border {
	/* Removed `background-color` because when an `<img/>` was still loading
	   it would show a dark gray rectangle. */
	/* For some reason the `<img/>` is not stretched to 100% width and height
	   and sometime there can be seen white pixels of the background at top and bottom. */
	background-color: rgba(0,0,0,0.1);
	background-color: var(--PhoneInputCountryFlag-backgroundColor--loading);
	/* Border is added via `box-shadow` because `border` interferes with `width`/`height`. */
	/* For some reason the `<img/>` is not stretched to 100% width and height
	   and sometime there can be seen white pixels of the background at top and bottom,
	   so an additional "inset" border is added. */
	box-shadow: 0 0 0 1px rgba(0,0,0,0.5),
		inset 0 0 0 1px rgba(0,0,0,0.5);
	box-shadow: 0 0 0 var(--PhoneInputCountryFlag-borderWidth) var(--PhoneInputCountryFlag-borderColor),
		inset 0 0 0 var(--PhoneInputCountryFlag-borderWidth) var(--PhoneInputCountryFlag-borderColor);
}
.PhoneInputCountryIconImg {
	/* Fixes weird vertical space above the flag icon. */
	/* https://gitlab.com/catamphetamine/react-phone-number-input/-/issues/7#note_348586559 */
	display: block;
	/* 3rd party <SVG/> flag icons won't stretch if they have `width` and `height`.
	   Also, if an <SVG/> icon's aspect ratio was different, it wouldn't fit too. */
	width: 100%;
	height: 100%;
}
.PhoneInputInternationalIconPhone {
	opacity: 0.8;
	opacity: var(--PhoneInputInternationalIconPhone-opacity);
}
.PhoneInputInternationalIconGlobe {
	opacity: 0.65;
	opacity: var(--PhoneInputInternationalIconGlobe-opacity);
}
/* Styling native country `<select/>`. */
.PhoneInputCountry {
	position: relative;
	align-self: stretch;
	display: flex;
	align-items: center;
	margin-right: 0.35em;
	margin-right: var(--PhoneInputCountrySelect-marginRight);
}
.PhoneInputCountrySelect {
	position: absolute;
	top: 0;
	left: 0;
	height: 100%;
	width: 100%;
	z-index: 1;
	border: 0;
	opacity: 0;
	cursor: pointer;
}
.PhoneInputCountrySelect[disabled] {
	cursor: default;
}
.PhoneInputCountrySelectArrow {
	display: block;
	content: '';
	width: 0.3em;
	width: var(--PhoneInputCountrySelectArrow-width);
	height: 0.3em;
	height: var(--PhoneInputCountrySelectArrow-width);
	margin-left: 0.35em;
	margin-left: var(--PhoneInputCountrySelectArrow-marginLeft);
	border-style: solid;
	border-color: inherit;
	border-color: var(--PhoneInputCountrySelectArrow-color);
	border-top-width: 0;
	border-bottom-width: 1px;
	border-bottom-width: var(--PhoneInputCountrySelectArrow-borderWidth);
	border-left-width: 0;
	border-right-width: 1px;
	border-right-width: var(--PhoneInputCountrySelectArrow-borderWidth);
	transform: rotate(45deg);
	transform: var(--PhoneInputCountrySelectArrow-transform);
	opacity: 0.45;
	opacity: var(--PhoneInputCountrySelectArrow-opacity);
}
.PhoneInputCountrySelect:focus + .PhoneInputCountryIcon + .PhoneInputCountrySelectArrow {
	opacity: 1;
	color: #03b2cb;
	color: var(--PhoneInputCountrySelectArrow-color--focus);
}
.PhoneInputCountrySelect:focus + .PhoneInputCountryIcon--border {
	box-shadow: 0 0 0 1px #03b2cb,
		inset 0 0 0 1px #03b2cb;
	box-shadow: 0 0 0 var(--PhoneInputCountryFlag-borderWidth) var(--PhoneInputCountryFlag-borderColor--focus),
		inset 0 0 0 var(--PhoneInputCountryFlag-borderWidth) var(--PhoneInputCountryFlag-borderColor--focus);
}
.PhoneInputCountrySelect:focus + .PhoneInputCountryIcon .PhoneInputInternationalIconGlobe {
	opacity: 1;
	color: #03b2cb;
	color: var(--PhoneInputCountrySelectArrow-color--focus);
}
